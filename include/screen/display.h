#ifndef DISPLAY_CONTROLLER_H
#define DISPLAY_CONTROLLER_H

#include "menu.h"
#include <Arduino.h>
#include <U8g2lib.h>

#ifndef DISPLAY_TYPE
#define DISPLAY_TYPE U8G2_SH1106_128X64_NONAME_1_HW_I2C
#endif // !DISPLAY_TYPE

#define MAX_DEPTH 4
#define FONT_NAME u8g2_font_7x13_mr

static const unsigned char humidity_bitmap[] U8X8_PROGMEM = { 0x80, 0x01, 0xC0, 0x03, 0xE0, 0x07, 0xF0, 0x0F, 0xF0, 0x0F, 0xF8, 0x1F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xF8, 0x1F, 0xF0, 0x0F };
static const unsigned char temperature_bitmap[] U8X8_PROGMEM = { 0xC0, 0x03, 0xE0, 0x07, 0x60, 0x06, 0x60, 0x06, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xE0, 0x07 };
static const unsigned char egg_bitmap[] U8X8_PROGMEM = { 0x00, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x03, 0xC0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0xC0, 0x01, 0x80, 0x03, 0xE0, 0x01, 0xC0, 0x03, 0xE0, 0x03, 0xC0, 0x07, 0xE0, 0x03, 0xC0, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x03, 0xC0, 0x07, 0xF8, 0x0F, 0xF0, 0x1F, 0xE0, 0x03, 0xC0, 0x0F, 0xFC, 0x1F, 0xF8, 0x3F, 0xF0, 0x03, 0xC0, 0x1F, 0x3E, 0x3E, 0xFC, 0x7C, 0xF8, 0x03, 0xC0, 0x3F, 0x1F, 0x7E, 0x3E, 0xF8, 0xFC, 0x03, 0xE0, 0xFF, 0x1F, 0xF8, 0x3F, 0xF8, 0xFF, 0x07, 0xE0, 0xF9, 0x0F, 0xF8, 0x0F, 0xE0, 0xBF, 0x07, 0xE0, 0xF9, 0x03, 0xE0, 0x07, 0xE0, 0x8F, 0x07, 0xE0, 0xF1, 0x03, 0xC0, 0x03, 0xC0, 0x8F, 0x07, 0xE0, 0xC1, 0x00, 0xC0, 0x03, 0x00, 0x83, 0x07, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0xF0, 0x03, 0x00, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0xE0, 0x0F, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x1F, 0x00, 0x00, 0x00 };

class Display {

private:
    DISPLAY_TYPE display = DISPLAY_TYPE(U8G2_R0, U8X8_PIN_NONE);
    u8g2_uint_t width = display.getDisplayWidth();
    u8g2_uint_t height = display.getDisplayHeight();

public:
    bool begin(bool rotate_display = false);
    void draw_temperature_screen(float temperature, float target);
    void draw_humidity_screen(float humdidity, float target);
    void draw_menu(Menu menu);
    void draw_title(const char* title, const uint8_t* font);
    void draw_page(const char* title, float value, int change_type);
    void draw_bitmap();
    void draw_incubation_page(float temp, float humd, float Ttarget, float Htarget);
    void draw_start_screen();
    void draw_error(const char* error_msg);
};

#endif // !DISPLAY_CONTROLLER_H
